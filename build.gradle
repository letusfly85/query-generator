apply plugin: 'groovy'
apply plugin: 'scala'
apply plugin: 'application'

repositories {
    mavenCentral()
}

dependencies {
    compile    'org.codehaus.groovy:groovy-all:2.1.5'

    compile    'org.scala-lang:scala-compiler:2.9.2'

    compile    'org.scala-lang:scala-library:2.9.2'

    compile    'commons-io:commons-io:2.4'

    compile    'commons-lang:commons-lang:2.6'

    compile    'commons-configuration:commons-configuration:1.10'

    compile    'org.tmatesoft.svnkit:svnkit:1.3.3'

    compile    'org.antlr:antlr-runtime:3.4'

    //compile 'com.jellyfish85:dbaccessor:1.0-SNAPSHOT'
    compile files('lib/dbaccessor.jar')

    //compile 'com.jellyfish85:svnaccessor:1.0-SNAPSHOT'
    compile files('lib/svnaccessor.jar')

    //compile 'com.jellyfish85:xlsaccessor:1.0-SNAPSHOT'
    compile files('lib/xlsaccessor.jar')

    //compile 'com.jellyfish85:cassandra-accessor:1.0-SNAPSHOT'
    compile files('lib/cassandra-accessor.jar')

    runtime files('lib/ojdbc14.jar')

    runtime 'org.apache.poi:poi:3.8'

    runtime 'org.apache.poi:poi-ooxml:3.8'

    testCompile      'junit:junit:4.11'

    testCompile      group: "org.specs2", name: "specs2_2.9.2", version:"1.12.1"

    testCompile      group: 'org.specs2', name: 'specs2-scalaz-core_2.9.1',version:'6.0.1'

}

test {
    systemProperty "app.env.name",           "development"
    systemProperty "4test.dependentGrpCd",   "99"
    systemProperty "4test.environment",      "4test.environment"
}


task GenerateErdReleaseScriptsRunner (type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = "com.jellyfish85.query.generator.runner.GenerateErdReleaseScriptsRunner"
    args = project.runargs.split(',').toList()
}

task GenerateIndexDDLRunner (type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = "com.jellyfish85.query.generator.runner.GenerateIndexDDLRunner"
    args = project.runargs.split(',').toList()
}

task GenerateIndexReDDLRunner (type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = "com.jellyfish85.query.generator.runner.GenerateIndexReDDLRunner"
    args = project.runargs.split(',').toList()
}

task GenerateGeneralCodeSqlLoaderSetsRunner (type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = "com.jellyfish85.query.generator.runner.GenerateGeneralCodeSqlLoaderSetsRunner"
    args = project.runargs.split(',').toList()
}

task GenerateUniqueCodeSqlLoaderSetsRunner (type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = "com.jellyfish85.query.generator.runner.GenerateUniqueCodeSqlLoaderSetsRunner"
    args = project.runargs.split(',').toList()
}

task GenerateTemplateRecordSqlLoaderSetsRunner (type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = "com.jellyfish85.query.generator.runner.GenerateTemplateRecordSqlLoaderSetsRunner"
    args = project.runargs.split(',').toList()
}

task GenerateAuthorityCodeSqlLoaderSetsRunner (type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = "com.jellyfish85.query.generator.runner.GenerateAuthorityCodeSqlLoaderSetsRunner"
    args = project.runargs.split(',').toList()
}

task GenerateErrorCheckCodeSqlLoaderSetsRunner (type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = "com.jellyfish85.query.generator.runner.GenerateErrorCheckCodeSqlLoaderSetsRunner"
    args = project.runargs.split(',').toList()
}

task GenerateProcedureReleaseScriptsRunner (type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = "com.jellyfish85.query.generator.runner.GenerateProcedureReleaseScriptsRunner"
    args = project.runargs.split(',').toList()
}